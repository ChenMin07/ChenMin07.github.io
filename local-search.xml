<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>剑指offer刷题1</title>
    <link href="/2022/04/23/%E5%89%91%E6%8C%87offer1/"/>
    <url>/2022/04/23/%E5%89%91%E6%8C%87offer1/</url>
    
    <content type="html"><![CDATA[<h3 id="数组中出现次数超过一半的数字"><a href="#数组中出现次数超过一半的数字" class="headerlink" title="数组中出现次数超过一半的数字"></a>数组中出现次数超过一半的数字</h3><p>描述：数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。假设数组非空，并且一定存在满足条件的数字。</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">moreThanHalfNum_Solution</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-type">int</span> val, cnt = <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">// 使用了抵消的思想</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> e : nums) <br>        &#123;<br>            <span class="hljs-keyword">if</span> (cnt == <span class="hljs-number">0</span>)<br>            &#123;<br>                val = e;<br>                cnt ++;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <br>            &#123;<br>                <span class="hljs-keyword">if</span> (e != val)   cnt--;<br>                <span class="hljs-keyword">else</span>    cnt++;<br>            &#125;<br>        &#125;<br>        <br>        <span class="hljs-keyword">return</span> val;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="字符流中第一个只出现一次的字符（单调队列）"><a href="#字符流中第一个只出现一次的字符（单调队列）" class="headerlink" title="字符流中第一个只出现一次的字符（单调队列）"></a>字符流中第一个只出现一次的字符（单调队列）</h3><p>请实现一个函数用来找出字符流中第一个只出现一次的字符。</p><p>例如，当从字符流中只读出前两个字符 <code>go</code> 时，第一个只出现一次的字符是 <code>g</code>。</p><p>当从该字符流中读出前六个字符 <code>google</code> 时，第一个只出现一次的字符是 <code>l</code>。</p><p>如果当前字符流没有存在出现一次的字符，返回 <code>#</code> 字符。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-comment">// 使用哈希表和单调队列</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>&#123;<br><span class="hljs-keyword">public</span>:<br>    unordered_map&lt;<span class="hljs-type">char</span>, <span class="hljs-type">int</span>&gt; count;<br>    queue&lt;<span class="hljs-type">char</span>&gt; q;<br>    <br>    <span class="hljs-comment">//Insert one char from stringstream</span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">insert</span><span class="hljs-params">(<span class="hljs-type">char</span> ch)</span></span>&#123;<br>        count[ch]++;<br>        <span class="hljs-keyword">if</span> (!q.<span class="hljs-built_in">empty</span>() &amp;&amp; q.<span class="hljs-built_in">front</span>() == ch) &#123;<br>            <span class="hljs-keyword">while</span> (!q.<span class="hljs-built_in">empty</span>() &amp;&amp; count[q.<span class="hljs-built_in">front</span>()] &gt; <span class="hljs-number">1</span>)  <br>                q.<span class="hljs-built_in">pop</span>();<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (count[ch] == <span class="hljs-number">1</span>)<br>            q.<span class="hljs-built_in">push</span>(ch);<br>    &#125;<br>    <span class="hljs-comment">//return the first appearence once char in current stringstream</span><br>    <span class="hljs-function"><span class="hljs-type">char</span> <span class="hljs-title">firstAppearingOnce</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">if</span> (q.<span class="hljs-built_in">empty</span>())  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;#&#x27;</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> q.<span class="hljs-built_in">front</span>();<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2022/04/23/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2022/04/23/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<img src="/2022/04/23/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png" class="" title="[图片引用方法一]">]]></content>
    
    
    
    <tags>
      
      <tag>demo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VIM的使用</title>
    <link href="/2022/04/23/VIM%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/04/23/VIM%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>VIM快捷键</p><hr><p>删除单词</p><ul><li>dw 删除当前单词至后一个单词的<strong>开头</strong></li><li>de 删除当前单词至<strong>末尾</strong></li><li>daw 删除光标所在的单词至后一个单词的开头</li><li>D 删除至光标至<strong>本行末尾</strong>的</li><li>d0 删除至本行<strong>开头</strong></li><li>dd删除一行</li></ul><p>撤销</p><ul><li>u</li><li>ctrl + r反撤销</li></ul><p>函数跳转</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 使用了ctags插件，在整个项目的代码目录下ctags -R，然后可以使用ctrl + ]进行跳转,ctrl + t进行反跳转</span><br><br><span class="hljs-comment">// 跳转到系统函数是使用2 + shift + k</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/22/hello-world/"/>
    <url>/2022/04/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
